import useSecurityEventQuery from 'modules/SecurityEvent/hooks/queries/useSecurityEventQuery';
import { LoadingHandler } from 'modules/Shared/components';
import { DataGrid, GridColumns } from '@mui/x-data-grid';
import { IEvent } from 'modules/Shared/interfaces';
import { Stack } from '@mui/material';

const columns: GridColumns<IEvent> = [
  {
    field: 'description',
    headerName: 'Description',
    flex: 1,
    valueGetter: ({ row }) => row.rule.description,
  },
  {
    field: 'level',
    headerName: 'Level',
    valueGetter: ({ row }) => row.rule.level,
  },
  {
    field: 'firedtimes',
    headerName: 'Fired Times',
    flex: 1,
    valueGetter: ({ row }) => row.rule.firedtimes,
  },
];

export const VulnerabilityDialogEvents = () => {
  const {
    eventsByAgentAndVulnerability,
    eventsByAgentAndVulnerabilityIsLoading,
  } = useSecurityEventQuery();

  return (
    <LoadingHandler loading={eventsByAgentAndVulnerabilityIsLoading}>
      <DataGrid
        hideFooter={!eventsByAgentAndVulnerability.length}
        components={{
          // eslint-disable-next-line react/no-unstable-nested-components
          NoRowsOverlay: () => (
            <Stack height="100%" alignItems="center" justifyContent="center">
              No events were found for this vulnerability in the current time
              range.
            </Stack>
          ),
        }}
        autoHeight
        autoPageSize
        columns={columns}
        rows={eventsByAgentAndVulnerability}
      />
    </LoadingHandler>
  );
};

export default VulnerabilityDialogEvents;
