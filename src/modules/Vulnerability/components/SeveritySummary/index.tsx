import { CardWithBadge } from 'modules/Shared/components/CardWithBadge';
import { Grid, Stack, Typography } from '@mui/material';
import {
  chartDarkBlue,
  chartRed,
  chartYellow,
  dark50,
  textWhite,
} from 'modules/Shared/helpers/styles/Colors';
import { LoadingHandler } from 'modules/Shared/components';
import React from 'react';
import { useVulnerabilityContext } from 'modules/Vulnerability/contexts/VulnerabilityContext';
import { SEVERITY } from 'modules/Shared/enums/Vulnerability';

interface Props {
  severitySummaryData?: {
    high: number;
    critical: number;
    medium: number;
    low: number;
  };
  severitySummaryIsLoading: boolean;
  title: string;
}

export const VulnerabilityBySeverity = ({
  severitySummaryData,
  severitySummaryIsLoading,
  title,
}: Props) => {
  const { setVulnerabilitiesFilters, vulnerabilitiesFilters } =
    useVulnerabilityContext();
  return (
    <LoadingHandler loading={severitySummaryIsLoading}>
      <CardWithBadge title={title}>
        <Grid container justifyContent="space-evenly" direction="row">
          <Grid item xs={3}>
            <Stack alignItems="center">
              <Typography variant="subtitle2" color={dark50}>
                Critical
              </Typography>
              <Typography
                onClick={() => {
                  setVulnerabilitiesFilters({
                    ...vulnerabilitiesFilters,
                    severity: SEVERITY.CRITICAL,
                  });
                }}
                variant="h4"
                color={chartRed}
                sx={{
                  '&:hover': {
                    cursor: 'pointer',
                    opacity: '0.8',
                  },
                }}
              >
                {severitySummaryData?.critical}
              </Typography>
            </Stack>
          </Grid>
          <Grid item xs={3}>
            <Stack alignItems="center">
              <Typography variant="subtitle2" color={dark50}>
                High
              </Typography>
              <Typography
                onClick={() => {
                  setVulnerabilitiesFilters({
                    ...vulnerabilitiesFilters,
                    severity: SEVERITY.HIGH,
                  });
                }}
                variant="h4"
                color={chartYellow}
                sx={{
                  '&:hover': {
                    cursor: 'pointer',
                    opacity: '0.8',
                  },
                }}
              >
                {severitySummaryData?.high}
              </Typography>
            </Stack>
          </Grid>
          <Grid item xs={3}>
            <Stack alignItems="center">
              <Typography variant="subtitle2" color={dark50}>
                Medium
              </Typography>
              <Typography
                onClick={() => {
                  setVulnerabilitiesFilters({
                    ...vulnerabilitiesFilters,
                    severity: SEVERITY.MEDIUM,
                  });
                }}
                variant="h4"
                color={chartDarkBlue}
                sx={{
                  '&:hover': {
                    cursor: 'pointer',
                    opacity: '0.8',
                  },
                }}
              >
                {severitySummaryData?.medium}
              </Typography>
            </Stack>
          </Grid>
          <Grid item xs={3}>
            <Stack alignItems="center">
              <Typography variant="subtitle2" color={dark50}>
                Low
              </Typography>
              <Typography
                onClick={() => {
                  setVulnerabilitiesFilters({
                    ...vulnerabilitiesFilters,
                    severity: SEVERITY.LOW,
                  });
                }}
                variant="h4"
                color={textWhite}
                sx={{
                  '&:hover': {
                    cursor: 'pointer',
                    opacity: '0.8',
                  },
                }}
              >
                {severitySummaryData?.low}
              </Typography>
            </Stack>
          </Grid>
        </Grid>
      </CardWithBadge>
    </LoadingHandler>
  );
};
